#建立和维护最大堆， 排序的过程是将最大的后置
def maxheapset(alist, length, i):
    left = 2* i
    right = 2* i+ 1
    largest = i
    if left< length and alist[left]> alist[i]:
        largest = left
    else:
        largest = i
    if right< length and alist[right]> alist[largest]:
        largest = right
    if largest != i:
        alist[i], alist[largest] = alist[largest], alist[i]
        maxheapset(alist, length, largest)
        
def builmaxheap(alist):
    length = len(alist)
    for i in xrange(length/2, -1, -1):
        maxheapset(alist, length, i)
        
def heapsort(alist):
    builmaxheap(alist)
    length = len(alist)
    size = len(alist)
    for i in xrange(0, length):
        alist[0], alist[length- i- 1]= alist[length- i- 1], alist[0]
        #size -= 1
        maxheapset(alist, size- i- 1, 0)
    return alist
a = [2, 4, 7, 16, 8, 1, 9, 10, 3, 14]
print heapsort(a)
